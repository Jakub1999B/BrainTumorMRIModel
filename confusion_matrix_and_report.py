# -*- coding: utf-8 -*-
"""confusion_matrix_and_report.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IotpT-2Eo7eku0qg3DLMqILM8odXAXoU
"""

import os
import sys
sys.path.append("/content/drive/MyDrive/BrainTumorMRIModel")
import numpy as np
import pandas as pd
import tensorflow as tf
import matplotlib.pyplot as plt
from tensorflow import keras
from skimage import color
from skimage import io
import sklearn
from tqdm import tqdm
import cv2
import seaborn as sns
from keras import layers
from sklearn.model_selection import train_test_split
from tensorflow.keras.preprocessing.image import ImageDataGenerator
from tensorflow.keras import datasets, layers, models
from sklearn.metrics import confusion_matrix
from sklearn.metrics import classification_report
import argparse
from tensorflow.keras.utils import to_categorical
from imutils import paths
from tensorflow.keras.optimizers import SGD
from keras import Sequential

def confusion_matrix_and_report(model, test_dataset):

  predictions = []
  true_categories = []

  for x, y in test_dataset:
    temp = model(x)
    temp = np.array(tf.argmax(temp, axis=1))
    predictions.append(temp)
    y = np.array(tf.argmax(y, axis=1))
    true_categories.append(y)


  index=["Actual Glioma Tumor", "Actual Meningioma Tumor", "Actual No Tumor", "Actual Pituitary Tumor"]
  columns=["Predicted Glioma Tumor", "Predicted Meningioma Tumor", "Predicted No Tumor", "Predicted Pituitary Tumor"]
  cm = pd.DataFrame(data=confusion_matrix(true_categories, predictions, labels=[0,1,2,3]),index=index, columns=columns)
  data=confusion_matrix(true_categories, predictions, labels=[0,1,2,3])
  report = classification_report(true_categories, predictions)

  sns.heatmap(cm,annot=True, fmt="d")

  print(report)

  return cm, report